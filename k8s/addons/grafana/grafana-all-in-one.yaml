# This configuration file is used to deploy grafana all component.
# grafana-pvc.yaml
# use storageClass instead
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-claim
  namespace: monitoring
spec:
  storageClassName: nfs-dynamic-monitoring
  accessModes: ["ReadWriteMany"]
  resources:
    requests:
      storage: 1Gi

---
# config-map.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-provider
  namespace: monitoring
data:
  default-dashboard.yaml: |
    - name: 'default'
      org_id: 1
      folder: ''
      type: file
      options:
        folder: /var/lib/grafana/dashboards

---
# deployment
---
# deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
  labels:
    k8s-app: grafana
    component: core
    version: 7.1.3
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: grafana
  template:
    metadata:
      labels:
        k8s-app: grafana
        component: core
    spec:
      # initContainers init creating directory for dashboards on pv claim
      initContainers:
      - name: grafana-mkdir
        image: docker-hub:5000/alpine:3.12.0
        imagePullPolicy: IfNotPresent
        command: ["mkdir", "-p", "/var/lib/grafana/dashboards"]
        volumeMounts:
        - name: grafana-persistent-storage
          mountPath: /var/lib/grafana
      containers:
        - name: grafana
          image: docker-hub:5000/grafana/grafana:7.1.3
          ports:
          - containerPort: 3000
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
          - name: grafana-persistent-storage
            mountPath: /var/lib/grafana
          - name: grafana-dashboard-provider
            mountPath: /etc/grafana/provisioning/dashboards
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534  # nfs user nfsnobody
      volumes:
      - name: grafana-dashboard-provider
        configMap:
          name: grafana-dashboard-provider
      - name: grafana-persistent-storage
        persistentVolumeClaim:
          claimName: grafana-claim

---
# service.yaml
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
  labels:
    name: grafana
spec:
  type: NodePort
  selector:
    k8s-app: grafana
  ports:
  - protocol: TCP
    port: 3000
    targetPort: 3000
    nodePort: 30300
