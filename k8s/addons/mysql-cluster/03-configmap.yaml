apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-cluster
  namespace: mysql-cluster
  labels:
    app: mysql-cluster
data:
  master.cnf: |
    # master node, only one node
    [mysqld]
    binlog_format=MiXED
    log-bin=mysql-bin
    innodb_flush_log_at_trx_commit=1
    sync_binlog=1
  slave.cnf: |
    # slave node(s), one or multi nodes
    [mysqld]
    super-read-only
    binlog_format=MiXED
    log-bin=mysql-bin
    innodb_flush_log_at_trx_commit=1
  00-modify-mycnf.sh: |
    sed -i "/^pid-file=.*$/a\!includedir /etc/my.cnf.d" /etc/my.cnf
  10-master-root.sql: |
    create user 'root'@'%' identified by '${MYSQL_ROOT_PASSWORD}';
    grant all privileges on *.* to 'root'@'%' with grant option;
    flush privileges;
  10-slave-export-master.sh: |
    set -ex
    if [ -f /var/lib/mysql-cluster/master.dump ]; then
      echo "Master node's data has been exported!"
    else
      mysqldump -h mysql-cluster-master.${MY_POD_NAMESPACE} -uroot -p${MYSQL_ROOT_PASSWORD} --all-databases --master-data=1 >/var/lib/mysql-cluster/master.dump
    fi
  20-slave.sql: |
    source /var/lib/mysql-cluster/master.dump;
    CHANGE MASTER TO
      MASTER_HOST='mysql-cluster-master.${MY_POD_NAMESPACE}',
      MASTER_USER='root',
      MASTER_PASSWORD='${MYSQL_ROOT_PASSWORD}',
      MASTER_CONNECT_RETRY=10;
    START SLAVE;
    SHOW SLAVE STATUS \G
  99-init-end.sh: |
    [ -f /var/lib/mysql-cluster/${HOSTNAME} ] || touch /var/lib/mysql-cluster/${HOSTNAME}
