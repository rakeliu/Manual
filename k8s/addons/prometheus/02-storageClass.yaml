# create dynamic storage-class
---
# RBAC ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nfs-client-provisioner-monitoring

---
# RBAC ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nfs-client-provisioner-runner-monitoring
rules:
  - apiGroups: 
      - ""
    resources:
      - persistentvolumes
    verbs:
      - get
      - list
      - watch
      - create
      - delete
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
    - storage.k8s.io
    resources:
      - storageclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - event
    verbs:
      - list
      - watch
      - create
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - create
      - delete
      - get
      - list
      - watch
      - patch

---
# RBAC ClusterRoleBinding
apiGroups: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: run-nfs-client-provisioner-monitoring
subjects:
  - kind: ServiceAccount
    name: nfs-client-provisioner-monitoring
    namespace: monitoring
roleRef:
  kind: ClusterRole
  name: nfs-client-provisioner-runner-monitoring
  apiGroups: rbac.authorization.k8s.io

---
# Deploy provisioner
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nfs-provisioner-monitoring
  namespace: monitoring
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      k8s-app: nfs-provisioner-monitoring
  template:
    labels:
      k8s-app: nfs-provisioner-monitoring
    spec:
      serviceAccountName: nfs-client-provisioner-monitoring
      containers:
        - name: nfs-client-provisioner-monitoring
          image: quay.io/external_storage/nfs-client-provisioner:v3.10-k8s1.11
          imagePullPolicy: IfNoPresent
          env:
            - name: PROVISONER_NAME
              # this value is provided to storageclass calling
              value: nfs-provisioner-monitoring
            - name: NFS_SERVER
              value: 192.168.176.8
            - name: NFS_PATH
              value: /appdata/nfs
          volumeMounts:
            - name: nfs-client-root
              mountPath: /persistentvolumes
      volumes:
        - name: nfs-client-root
          nfs:
            server: 192.168.176.8
            path: /appdata/nfs

---
# Deploy StorageClass
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: nfs-dynamic-monitoring
  namespace: monitoring
  # set as default storageClass
  # annotations:
  #   storageclass.kubernetes.io/is-default-class: "true"
# same as PROVISIONER_NAME upon
provisioner: nfs-provisioner-monitoring
# allowVolumeExpansion: true