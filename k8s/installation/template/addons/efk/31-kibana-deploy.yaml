# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana-logging
  namespace: logging
  labels:
    k8s-app: kibana-logging
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: kibana-logging
  template:
    metadata:
      labels:
        k8s-app: kibana-logging
      # annotations:
      #   seccomp.security.alpha.kubernetes.io/pod: 'docker/default'
    spec:
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: kibana-logging
        image: ${DOCKER_HUB}/docker.elastic.co/kibana/kibana-oss:7.10.2
        imagePullPolicy: IfNotPresent
        resources:
          # need more cpu upon initializtion, therefore burstatble class
          limits:
            cpu: 1000m
          requests:
            cpu: 100m
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ELASTICSEARCH_HOSTS
          value: http://elasticsearch-logging:9200
        - name: SERVER_NAME
          value: kibana-logging
        - name: SERVER_BASEPATH
          #value: /api/v1/namespaces/$(POD_NAMESPACE)/services/kibana-logging/proxy
          # for ingress, keep SERVER_BASEPATH empty
          value: ""
        - name: SERVER_REWRITEBASEPATH
          value: "false"
        ports:
        - containerPort: 5601
          name: ui
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /api/status
            port: ui
          initialDelaySeconds: 5
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/status
            port: ui
          initialDelaySeconds: 5
          timeoutSeconds: 10
